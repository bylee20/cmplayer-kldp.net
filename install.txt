1) 컴파일

CMPlayer를 컴파일하기 위해서는 다음의 것들이 필요합니다.

	1. Qt4.4.0 이상 개발용 라이브러리 및 해더파일, 개발 툴
	Qt4.4.0 미만에서는 컴파일이 안될수도 있습니다(미확인).
	컴파일시에 qmake, uic, lrelease등을 이용하기 때문에 해더파일 뿐만 아니라 개발용 툴들도 필요합니다.
	배포판에 따라서 qt4-devel 혹은 libqt4-dev등의 이름으로 패키지가 제공되는경우가 있습니다.

	2. xine 개발용 라이브러리 및 해더파일
	xine을 재생엔진으로 이용할 경우 필요합니다.
	배포판에 따라서 xine-devel 혹은 libqt4-dev등의 이름으로 패키지가 제공되는 경우가 있습니다.

필요한 것들을 갖춘후, install.txt가 있는 경로에서

make

라고 입력하면 컴파일이 시작됩니다. make시에 선택할수 있는 옵션은 다음과 같습니다.

	1. PREFIX: 빌드한 파일들은 PREFIX아래의 cmplayer디렉토리안에 설치됩니다.
	지정하지 않을 경우 '/usr/local/share'가 선택됩니다.

	2. CMPLAYER_EXE_PATH: 실행 스크립트의 경로를 지정합니다.
	실행스크립트는 CMPLAYER_EXE_PATH 아래에 cmplayer라는 이름으로 생성됩니다.
	지정하지 않을 경우 '/usr/bin'가 선택됩니다.

	2. ENGINE_LIST: 빌드할 재생엔진을 선택할 수 있습니다. 현재 이용가능한 값은 xine, mplayer입니다.
	여러개를 지정할 경우는 ENGINE_LIST="xine mplayer" 와 같이 ""로 둘러싸고 공백으로 구분합니다.
	지정하지 않을 경우 모든 재생엔진을 빌드합니다.

	3. ENABLE_OPENGL: OpenGL 플러그인을 함께 빌드합니다.
	enable로 지정할 경우 활성화됩니다. 아직 실험단계이므로 추천하지 않습니다.
	지정하지 않을 경우 기본값은 disable로, OpenGL 플러그인을 빌드하지 않습니다.

이외에도 몇가지 더 설정가능한 옵션이 더 있으나, 보통은 건드릴일이 없으므로 생략합니다.
궁금하신 분은 make help 를 실행해보세요(make --help가 아닙니다).
옵션을 이용하여 빌드할 경우는 다음과 같이 합니다.

예: make PREFIX=${HOME} ENGINE_LIST=mplayer

한번 make를 실행한 후, 옵션 변경등을 위해 다시 실행하는 경우, 그전에 

make clean

을 실행하여 기존에 컴파일된 파일들을 삭제하여야 합니다.

2) 설치

컴파일을 정상적으로 마친 후,

make install

을 입력하면 설치를 시작합니다. 1)에서 설명한 CMPLAYER_EXE_PATH를 설정하지 않았다면 /usr/bin 에 실행 스크립트 cmplayer가 생성됩니다.
CMPLAYER_EXE_PATH가 지정된 경우는 해당 경로에 생성될 것입니다.
환경변수 PATH에 등록된 경로(일반적으로 기본값인 /usr/bin은 등록되어있습니다)에 존재한다면 명령행에서 cmplayer라고 입력하는 것으로 실행될 것입니다.